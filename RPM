#!/bin/bash

#############################################
######## Random Password Manager ############
#############################################

# Defining colours and other escape sequences for the text
green="\033[0;32m"  # Setting variable 'green' to green colour code
blue="\033[0;34m"   # Setting variable 'blue' to blue colour code
reset="\033[0m"     # Setting variable 'reset' to reset colour code
underline="\033[4m" # Setting variable 'underline' to underline text

# Displaying the logo
echo ".------..------..------." 
echo "|R.--. ||P.--. ||M.--. |"
echo "| :(): || :/\: || :/\: |"
echo "| ()() || (__) || :\/: |"
echo "| '--'R|| '--'P|| '--'M|"
echo "'------''------''------'"

# Displaying the title with green text
echo -e "${green}Random Password Manager${reset}"

# Starting an infinite loop
while true; do
	# Asking the user for their choice
	echo -e "${underline}Please choose an option:${reset}"
	echo "1. Add password"
	echo "2. View passwords"
	echo "3. Delete password"
	echo "4. Launch Random Password Generator (RPG)"
	echo "5. Quit"
	read choice

case $choice in
	1) # Adding password
	echo "Please enter the name of the account: "
	read account
	echo "Please enter the password: "
	read password
	echo "$account:$password" >> passwords.txt  # Storing the account and password in the file
	echo "Password added successfully"
	;;

	2) # Viewing passwords
	if [ ! -f passwords.txt ]; then
	echo "No passwords found"
	else
	cat passwords.txt
	fi
	;;

	3) # Deleting password
	if [ ! -f passwords.txt ]; then
	echo "No passwords found"
	else
	echo "Please enter the username of the account: "
	read account
	sed -i "/^$account:/d" passwords.txt  # Deleting the account and password from the file
	echo "Password deleted successfully"
	fi
	;;

	4) # Generating a random password    
	./RPG ;;

	5) # Quitting
	echo "Quitting script..."
	exit
	;;

	*) # Invalid choice
	echo "Invalid choice, please try again."
	;;
	esac
done

